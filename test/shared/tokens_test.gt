#include <stdio.h>
#include "cspec.h"
#include "cspec_output_header.h"
#include "cspec_output_verbose.h"
#include "cspec_output_unit.h"

#include "shared/tokens.h"

extern int status;


DESCRIBE(tokens_string_is_reserved_word, "Tokens - string_is_reserved_word")
  IT("returns true if token is reserved")
    SHOULD_BE_TRUE(string_is_reserved_word("let"));
  END_IT

  IT("returns false if token is not reserved")
    SHOULD_BE_FALSE(string_is_reserved_word("not_reserved"));
  END_IT
END_DESCRIBE

DESCRIBE(tokens_get_token_code, "Tokens - get_token_code")
  IT("returns NO_TOKEN if not found")
    SHOULD_EQUAL(get_token_code("unknown"), NO_TOKEN);
  END_IT

  IT("returns the token if found")
    SHOULD_EQUAL(get_token_code("let"), T_LET);
  END_IT
END_DESCRIBE

DESCRIBE(tokens_token_in_list, "Tokens - token_in_list")
  IT("returns true if token is found")
    //token_in_list
  END_IT

  IT("returns false if token is not found")
    //token_in_list
  END_IT
END_DESCRIBE

DESCRIBE(tokens, "Tokens")

  IT("defines the LITERAL struct")
    LITERAL l;
    SHOULD_EQUAL(&l, &l);
  END_IT

  IT("defines the RESERVED_WORD_TOKEN struct")
    RESERVED_WORD_TOKEN l;
    SHOULD_EQUAL(&l, &l);
  END_IT

  IT("defines the Token struct")
    Token l;
    SHOULD_EQUAL(&l, &l);
  END_IT

  status += CSpec_Run( DESCRIPTION( tokens_string_is_reserved_word ), CSpec_NewOutputVerbose() );
  status += CSpec_Run( DESCRIPTION( tokens_get_token_code ), CSpec_NewOutputVerbose() );
  status += CSpec_Run( DESCRIPTION( tokens_token_in_list ), CSpec_NewOutputVerbose() );
END_DESCRIBE